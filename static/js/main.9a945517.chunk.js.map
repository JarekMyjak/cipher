{"version":3,"sources":["components/ButtonAppBar.js","components/InputOutput.js","components/Cesar.js","components/Vigenere.js","components/Playfair.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","Button","color","href","InputOutput","encryptFunction","decryptFunction","React","useState","input","setInput","output","setOutput","Grid","container","direction","justify","alignItems","item","TextField","id","label","multiline","rows","onChange","event","target","value","ButtonGroup","orientation","aria-label","onClick","e","Cesar","offset","charSet","prepString","str","replace","toLowerCase","component","sentence","tmp","console","log","map","char","i","findIndex","c","length","join","toString","Vigenere","secret","setSecret","charToOffset","set","key","mi","ki","ci","Playfair","table","settable","onlyUnique","index","self","indexOf","makeTable","filter","sen","ret","el1","el2","i1","i2","r1","Math","floor","r2","c1","c2","App","Container","maxWidth","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a945517.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(0),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar({title}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n          Cipher Site\r\n          </Typography>\r\n\r\n          <Button color=\"inherit\" href=\"/cesar\">Cesar</Button>\r\n          <Button color=\"inherit\" href=\"/playfair\">Playfair</Button>\r\n          <Button color=\"inherit\" href=\"/vigenere\">Vigenere</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport Button from '@material-ui/core/Button'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst InputOutput = ({ encryptFunction, decryptFunction}) => {\r\n\r\n    const [input, setInput] = React.useState('');\r\n\r\n    const handleInputChange = (event) => {\r\n        setInput(event.target.value);\r\n    };\r\n\r\n    const [output, setOutput] = React.useState('');\r\n\r\n    const handleOutputChange = (event) => {\r\n        setOutput(event.target.value);\r\n    };\r\n\r\n    const handleEncrypt = (e) => {\r\n        setOutput(encryptFunction(input));\r\n    }\r\n\r\n    const handleDecrypt = (e) => {\r\n        setInput(decryptFunction(output));\r\n    }\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n            >\r\n                <Grid item ><TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Input\"\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    onChange={handleInputChange}\r\n                    value={input}\r\n                /></Grid>\r\n                \r\n\r\n                <Grid item ><ButtonGroup\r\n                    orientation=\"vertical\"\r\n                    color=\"primary\"\r\n                    aria-label=\"vertical outlined primary button group\"\r\n                >\r\n                    <Button\r\n                        onClick={handleEncrypt}\r\n                    ><ChevronRightIcon /></Button>\r\n                    <Button\r\n                        onClick={handleDecrypt}\r\n                    ><ChevronLeftIcon /></Button>\r\n                </ButtonGroup></Grid>\r\n\r\n\r\n                <Grid item ><TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Output\"\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    onChange={handleOutputChange}\r\n                    value={output}\r\n                /></Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputOutput","import React, { useState } from 'react'\r\nimport InputOutput from './InputOutput';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\nexport const Cesar = () => {\r\n    const [offset, setOffset] = useState(5)\r\n    const [charSet, setCharSet] = useState(\r\n        [\r\n            'a', 'ą', 'b', 'c', 'ć',\r\n            'd', 'e', 'ę', 'f', 'g',\r\n            'h', 'i', 'j', 'k', 'l',\r\n            'ł', 'm', 'n', 'ń', 'o',\r\n            'ó', 'p', 'q', 'r', 's',\r\n            'ś', 't', 'u', 'v', 'w',\r\n            'x', 'y', 'z', 'ź', 'ż',\r\n        ])\r\n\r\n    const prepString = (str) => {\r\n        return str.replace(/ /g, '').toLowerCase()\r\n    }\r\n\r\n    const encrypt = (sentence) => {\r\n        const tmp = [...prepString(sentence)]\r\n        console.log(tmp)\r\n        const ret = tmp.map((char) => {\r\n\r\n            let i = charSet.findIndex((c) => c === char)\r\n\r\n            return charSet[(i + charSet.length + offset) % charSet.length]\r\n        })\r\n\r\n        return ret.join('').toString()\r\n    }\r\n\r\n    const decrypt = (sentence) => {\r\n        const tmp = [...prepString(sentence)]\r\n        const ret = tmp.map((char) => {\r\n\r\n            let i = charSet.findIndex((c) => c === char)\r\n\r\n            return charSet[(i + charSet.length - offset) % charSet.length]\r\n        })\r\n\r\n        return ret.join('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <br/><Typography variant=\"h3\" component=\"h3\">Ceasar</Typography><br/>\r\n            <InputOutput encryptFunction={encrypt} decryptFunction={decrypt}></InputOutput>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useState }from 'react'\r\nimport InputOutput from './InputOutput';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\n\r\nexport const Vigenere = () => {\r\n    const [secret, setSecret] = useState('')\r\n    const [charSet, setCharSet] = useState(\r\n        [\r\n            'a', 'ą', 'b', 'c', 'ć',\r\n            'd', 'e', 'ę', 'f', 'g',\r\n            'h', 'i', 'j', 'k', 'l',\r\n            'ł', 'm', 'n', 'ń', 'o',\r\n            'ó', 'p', 'q', 'r', 's',\r\n            'ś', 't', 'u', 'v', 'w',\r\n            'x', 'y', 'z', 'ź', 'ż',\r\n        ])\r\n\r\n    const handleSecretChange = (e) => {\r\n        setSecret(e.target.value);\r\n    }\r\n\r\n    const charToOffset = (char, set) => set.findIndex((c) => c === char)\r\n\r\n    const prepString = (str) => {\r\n        return str.replace(/ /g, '').toLowerCase()\r\n    }\r\n    \r\n    const encrypt = (sentence) => {\r\n        let tmp = [...prepString(sentence)]\r\n        let key = [...secret]\r\n        const ret = tmp.map((char,i) => {\r\n            let mi = charToOffset(char, charSet)\r\n            let ki = charToOffset(key[i%key.length],charSet)\r\n            return charSet[(mi + ki + charSet.length) % charSet.length]\r\n        })\r\n        return ret.join('').toString()\r\n    }\r\n    \r\n    const decrypt = (sentence) => {\r\n        let tmp = [...prepString(sentence)]\r\n        let key = [...secret]\r\n        const ret = tmp.map((char,i) => {\r\n            let ci = charToOffset(char, charSet)\r\n            let ki = charToOffset(key[i%key.length],charSet)\r\n            return charSet[(ci - ki + charSet.length) % charSet.length]\r\n        })\r\n        return ret.join('').toString()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <br/><Typography variant=\"h3\" component=\"h3\">Vigenere</Typography><br/>\r\n            <InputOutput encryptFunction={encrypt} decryptFunction={decrypt}></InputOutput>\r\n            <br/>\r\n            <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Secret word\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleSecretChange}\r\n                    value={secret}\r\n                />\r\n        </>\r\n    )\r\n}\r\n","import React, { useState }from 'react'\r\nimport InputOutput from './InputOutput';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport const Playfair = () => {\r\n    const [secret, setSecret] = useState('')\r\n    const [charSet, setCharSet] = useState(\r\n        [\r\n            'a', 'ą', 'b', 'c', 'ć',\r\n            'd', 'e', 'ę', 'f', 'g',\r\n            'h', 'i', 'j', 'k', 'l',\r\n            'ł', 'm', 'n', 'ń', 'o',\r\n            'ó', 'p', 'q', 'r', 's',\r\n            'ś', 't', 'u', 'v', 'w',\r\n            'x', 'y', 'z', 'ź', 'ż',\r\n        ])\r\n\r\n    const [table, settable] = useState(charSet)\r\n\r\n    const handleSecretChange = (e) => {\r\n        setSecret(e.target.value);\r\n        //makeTable(e.target.value)\r\n        settable(makeTable(e.target.value))\r\n    }\r\n\r\n    function onlyUnique(value, index, self) {\r\n        return self.indexOf(value) === index;\r\n      }\r\n\r\n    const makeTable = (key) => {\r\n        return [...key,...charSet].filter(onlyUnique)\r\n    }\r\n\r\n    const charToOffset = (char, set) => set.findIndex((c) => c === char)\r\n\r\n    const prepString = (str) => {\r\n        return str.replace(/ /g, '').toLowerCase()\r\n    }\r\n    \r\n    const encrypt = (sentence) => {\r\n        let sen = [...prepString(sentence)]\r\n        let ret = ''\r\n        for (let i = 0; i < sen.length; i+=2) {\r\n            let el1 = sen[i];\r\n            let el2 = (i+1 === sen.length ? 'x' : sen[i+1]);\r\n\r\n            if (el1 === el2) { el2 = 'x'}\r\n\r\n            const i1 = charToOffset(el1,table)\r\n            const i2 = charToOffset(el2,table)\r\n            const r1 = Math.floor(i1/5)\r\n            const r2 = Math.floor(i2/5)\r\n            const c1 = i1%5\r\n            const c2 = i2%5\r\n            if (r1===r2) {\r\n                //same row\r\n                ret+=table[(r1*5)+((c1+1)%5)]\r\n                ret+=table[(r2*5)+((c2+1)%5)]\r\n            } else if (c1===c2) {\r\n                //same column\r\n                ret+=table[(((r1+1)%7)*5)+((c1)%5)%35]\r\n                ret+=table[(((r2+1)%7)*5)+((c2)%5)%35]\r\n            }else {\r\n                //square\r\n                ret+=table[((r1)*5)+((c2)%5)]\r\n                ret+=table[((r2)*5)+((c1)%5)]\r\n            }\r\n        }\r\n        return ret\r\n    }\r\n    \r\n    const decrypt = (sentence) => {\r\n        let sen = [...prepString(sentence)]\r\n        let ret = ''\r\n        for (let i = 0; i < sen.length; i+=2) {\r\n            let el1 = sen[i];\r\n            let el2 = (i+1 == sen.length ? 'x' : sen[i+1]);\r\n\r\n            if (el1 === el2) { el2 = 'x'}\r\n            \r\n            const i1 = charToOffset(el1,table)\r\n            const i2 = charToOffset(el2,table)\r\n            const r1 = Math.floor(i1/5)\r\n            const r2 = Math.floor(i2/5)\r\n            const c1 = i1%5\r\n            const c2 = i2%5\r\n            \r\n            if (r1===r2) {\r\n                //same row\r\n                ret+=table[(r1*5)+((c1+4)%5)]\r\n                ret+=table[(r2*5)+((c2+4)%5)]\r\n            } else if (c1===c2) {\r\n                //same column\r\n                ret+=table[(((r1+6)%7)*5)+((c1)%5)]\r\n                ret+=table[(((r2+6)%7)*5)+((c2)%5)]\r\n            }else {\r\n                //square\r\n                ret+=table[((r1)*5)+((c2)%5)]\r\n                ret+=table[((r2)*5)+((c1)%5)]\r\n            }\r\n        }\r\n        return ret\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <br/><Typography variant=\"h3\" component=\"h3\">Playfair</Typography><br/>\r\n            <InputOutput encryptFunction={encrypt} decryptFunction={decrypt}></InputOutput>\r\n            <br/>\r\n            <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Secret word\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleSecretChange}\r\n                    value={secret}\r\n                />\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from 'react-router-dom'\n\nimport Container from '@material-ui/core/Container'\nimport ButtonAppBar from './components/ButtonAppBar'\nimport { Cesar } from './components/Cesar';\nimport { Vigenere } from './components/Vigenere'\nimport { Playfair } from './components/Playfair'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ButtonAppBar></ButtonAppBar>\n      <Container maxWidth=\"sm\">\n        <p>test</p>\n        <Router>\n          {/* <Route path='/' ><Redirect to='/cesar'></Redirect></Route> */}\n          <Route path='../cesar'>\n            \n            <Cesar></Cesar>\n          </Route>\n          <Route path='./vigenere'>\n            <Vigenere></Vigenere>\n          </Route>\n          <Route path='/cipher/playfair'>\n            <Playfair></Playfair>\n          </Route>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}